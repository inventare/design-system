{"version":3,"file":"button.stories-0d55eed2.js","sources":["../../../../node_modules/clsx/dist/clsx.m.js","../../src/core/forwardRef.ts","../../src/components/button/button.tsx"],"sourcesContent":["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","/**\n * All credits here goes to Chakra-UI package creators and contributors:\n *\n * https://github.com/chakra-ui/chakra-ui/tree/main/packages/core/system\n */\nimport { ForwardRefRenderFunction, forwardRef as forwardReactRef } from \"react\";\nimport { RightJoinProps, PropsOf, As, ComponentWithAs } from \"./types\";\n\nexport function forwardRef<Props extends object, Component extends As>(\n  component: ForwardRefRenderFunction<\n    any,\n    RightJoinProps<PropsOf<Component>, Props> & {\n      as?: As;\n    }\n  >\n) {\n  return forwardReactRef(component) as unknown as ComponentWithAs<\n    Component,\n    Props\n  >;\n}\n","import clsx from \"clsx\";\nimport { createElement } from \"react\";\nimport { ButtonProps } from \"./button.types\";\nimport { forwardRef } from \"../../core\";\nimport { Spinner } from \"../spinner\";\n\nexport const Button = forwardRef<ButtonProps, \"button\">((props, ref) => {\n  const {\n    as,\n    children: rawChildren,\n    className: rawClassName,\n    disabled: rawDisabled,\n    variant = \"default\",\n    size = \"normal\",\n    square = false,\n    outline = false,\n    isLoading = false,\n    loadingType = \"text\",\n    loadingText = \"Loading...\",\n    loadingSpinnerSize = 24,\n    loadingSpinnerWidth = 3,\n    ...rest\n  } = props;\n\n  let disabled = rawDisabled;\n  let children = rawChildren;\n  if (isLoading) {\n    disabled = true;\n\n    if (loadingType === \"text\") {\n      children = <>{loadingText}</>;\n    }\n    if (loadingType === \"spinner\") {\n      children = (\n        <Spinner size={loadingSpinnerSize} width={loadingSpinnerWidth} />\n      );\n    }\n  }\n\n  const className = clsx({\n    btn: true,\n    [size]: true,\n    [variant]: true,\n    square: square,\n    disabled: disabled,\n    outline: outline,\n    [rawClassName || \"\"]: true,\n  });\n\n  return createElement(as || \"button\", {\n    ...rest,\n    ref,\n    disabled,\n    children,\n    className,\n  });\n});\n"],"names":["r","t","f","n","clsx","forwardRef","component","forwardReactRef","Button","props","ref","as","rawChildren","rawClassName","rawDisabled","variant","size","square","outline","isLoading","loadingType","loadingText","loadingSpinnerSize","loadingSpinnerWidth","rest","disabled","children","jsx","Fragment","Spinner","className","createElement"],"mappings":"uIAAA,SAASA,EAAE,EAAE,CAAC,IAAIC,EAAEC,EAAEC,EAAE,GAAG,GAAa,OAAO,GAAjB,UAA8B,OAAO,GAAjB,SAAmBA,GAAG,UAAoB,OAAO,GAAjB,SAAmB,GAAG,MAAM,QAAQ,CAAC,EAAE,IAAIF,EAAE,EAAEA,EAAE,EAAE,OAAOA,IAAI,EAAEA,CAAC,IAAIC,EAAEF,EAAE,EAAEC,CAAC,CAAC,KAAKE,IAAIA,GAAG,KAAKA,GAAGD,OAAQ,KAAID,KAAK,EAAE,EAAEA,CAAC,IAAIE,IAAIA,GAAG,KAAKA,GAAGF,GAAG,OAAOE,CAAC,CAAQ,SAASC,GAAM,CAAC,QAAQ,EAAEH,EAAEC,EAAE,EAAEC,EAAE,GAAGD,EAAE,UAAU,SAAS,EAAE,UAAUA,GAAG,KAAKD,EAAED,EAAE,CAAC,KAAKG,IAAIA,GAAG,KAAKA,GAAGF,GAAG,OAAOE,CAAC,CCQ1V,SAASE,EACdC,EAMA,CACA,OAAOC,EAAAA,WAAgBD,CAAS,CAIlC,CCdO,MAAAE,EAAAH,EAAA,CAAAI,EAAAC,IAAA,CACL,KAAA,CAAM,GAAAC,EACJ,SAAAC,EACU,UAAAC,EACC,SAAAC,EACD,QAAAC,EAAA,UACA,KAAAC,EAAA,SACH,OAAAC,EAAA,GACE,QAAAC,EAAA,GACC,UAAAC,EAAA,GACE,YAAAC,EAAA,OACE,YAAAC,EAAA,aACA,mBAAAC,EAAA,GACO,oBAAAC,EAAA,EACC,GAAAC,CACnB,EAAAf,EAGL,IAAAgB,EAAAX,EACAY,EAAAd,EACAO,IACEM,EAAA,GAEAL,IAAA,SACEM,EAAAC,EAAAC,EAAA,CAAA,SAAAP,CAAA,CAAA,GAEFD,IAAA,YACEM,EAAAC,EAAAE,EAAA,CAAA,KAAAP,EAAA,MAAAC,CAAA,CAAA,IAMJ,MAAAO,EAAA1B,EAAA,CAAuB,IAAA,GAChB,CAAAY,CAAA,EAAA,GACG,CAAAD,CAAA,EAAA,GACG,OAAAE,EACX,SAAAQ,EACA,QAAAP,EACA,CAAAL,GAAA,EAAA,EAAA,EACsB,CAAA,EAGxB,OAAAkB,EAAA,cAAApB,GAAA,SAAA,CAAqC,GAAAa,EAChC,IAAAd,EACH,SAAAe,EACA,SAAAC,EACA,UAAAI,CACA,CAAA,CAEJ,CAAA;;;;;;;;;;;;;;;;;;;","x_google_ignoreList":[0]}